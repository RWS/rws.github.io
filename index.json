{
  "README.html": {
    "href": "README.html",
    "title": "RWS-Developers",
    "summary": "RWS-Developers What is it? This the main repository for the RWS Developers documentation. Can I contribute? Anyone is welcome to contribute to the public documentation by making a pull request into the master repository. Getting started with your contribution The documentation is built using a static documentation generator called DocFX. The documentation content is saved in Markdown files and then built into a website using DocFX. The table of content is saved into separate toc.yml files. In order for you to make a contribution directly please follow the next steps: Create a local branch from the main repository Add your changes by modifying existing Markdown files or by adding new Markdown files Adding new files will require updating the toc.yml files. Use the guideline provided by DocFX to learn more. You can use tools such as Notepad++ or Visual Studio Code to edit the content Create a Pull Request with your changes. This pull request will be reviewed for correctness by one of our technical writers Once your pull request has been approved and committed into the main branch, an automatic pipeline will be triggered which will push your changes to the live documentation site if you wish to test your changes locally you can follow the DOCFX Installation guideline and build the entire solution locally Our documentation automatically fills in the product name and other details so you don't have to make the changes manually if we decide to update the product name. Use the 'var:VariableName' construct to tell our documentation engine to fill in the info for you. Here are the constructs available at this point: var:ProductName - The product name, for example RWS Developers"
  },
  "articles/appstore-manager-beta.html": {
    "href": "articles/appstore-manager-beta.html",
    "title": "AppStore Manager Beta",
    "summary": "AppStore Manager Beta Early Access to Self-Service Publishing AppStore Manager represents the future of app distribution for the RWS ecosystem. This new platform will give developers complete control over their app lifecycle - from initial publication to ongoing updates. Beta Program Features Currently Available in Beta: Developer profile management Self-service app signing Direct AppStore publishing Private distribution endpoints Real-time publication status Coming Soon: Enhanced analytics and download metrics Automated compatibility testing Join the Beta Who Should Apply: Active developers with published apps Partners planning new app releases Organizations managing multiple plugins/add-ons How to Apply: Send an email to AppStore Support with: Subject: AppStore Manager Beta: <Your Organization> Include: Brief description of your current or planned apps Our team will respond with access details and onboarding information. Timeline to General Availability We expect AppStore Manager to be generally available in Q2 2026. Beta participants will automatically transition to full accounts at launch."
  },
  "articles/appstore-publishing-overview.html": {
    "href": "articles/appstore-publishing-overview.html",
    "title": "AppStore Publishing Guide",
    "summary": "AppStore Publishing Guide RWS provides several pathways for developers to distribute their applications and integrations across our product ecosystem. Whether you're building Studio plugins, Cloud add-ons, Language Weaver integrations, Tridion extensions, or solutions for other RWS products, this guide will help you navigate the current publishing process. Current Publishing Process Until our new self-service platform becomes available, the RWS team manages app publication and signing on behalf of developers. This ensures quality control and proper code signing for all distributed applications. Available Services: Publish Apps on the AppStore - Distribute your apps publicly or privately through the RWS AppStore Sign Plugins for Private Distribution - Get your Trados Studio plugins properly signed for direct distribution Request a Developer License - Obtain the necessary licenses to develop with Trados APIs What's Coming: AppStore Manager We're developing AppStore Manager, a self-service platform that will empower developers to: Manage their own developer profiles Sign and publish apps independently Control app visibility and distribution settings Update listings and versions on-demand Current Status: AppStore Manager is in beta testing. Learn more about the beta program. Getting Started Determine your target product(s) - Identify which RWS products your solution will integrate with Obtain developer access - Request licenses or API credentials as needed Build your solution - Use our APIs and SDKs to create your application Choose distribution method - Public AppStore, private distribution, or custom endpoint Submit for publication - Follow our current process or join the beta program Support For questions about app publishing, developer access, or to request services: Email: app-signing@rws.com Community: RWS Developer Community"
  },
  "articles/developer_license.html": {
    "href": "articles/developer_license.html",
    "title": "Request a Developer License",
    "summary": "Request a Developer License Selecting the Right License Developer access requirements vary across the RWS product ecosystem. Choose from the primary license types for developers: Desktop License for Trados Studio Requires desktop professional license Grants full functionality of Trados Studio on a single computer. Ideal for creating desktop-based integrations or customizations. Cloud License for Trados Team or Enterprise Requires Trados Cloud development license Provides access to Trados capabilities in a cloud-based environment. Best suited for solutions requiring team collaboration, centralized project management, and cloud workflows. Other RWS Products Language Weaver, Tridion, MultiTerm, etc. Refer to respective product documentation for developer access Contact AppStore Support if you're unsure about requirements Apply for a Developer License Send an email to AppStore Support with the following information: Full name and address - For identification and license assignment Development purpose - Describe your intended use: Custom integrations Automation scripts Trados Studio plugin development Trados Cloud add-on development Other (please specify) Company affiliation - If applicable: Company name and your role Primary contact person Mention if you're representing an existing RWS customer Solution details - Help us understand your project: Brief description of your planned solution Target audience (internal use, specific customer, public distribution) Intended AppStore publication: Yes/No Pricing model: Free/Paid (if applicable) What Happens Next Review - Our team evaluates each request against licensing guidelines Assessment - We consider the potential value and impact to the RWS community Approval - Once approved, you'll receive detailed instructions to proceed License delivery - Follow-up email with license details and next steps Timeline License requests are typically processed within 3-5 business days of receiving complete information. Getting Started After Approval Once you have your developer license: Set up your development environment - Follow the provided installation instructions Explore the documentation - Review APIs and SDKs for your target platform Join the community - Connect with other developers at RWS Developer Community Plan your distribution - Consider how you'll publish your solution using our AppStore Publishing Guide Need Help? License questions: AppStore Support Development support: RWS Developer Community API documentation: Browse our product-specific API guides on this site"
  },
  "articles/publish-app-appstore.html": {
    "href": "articles/publish-app-appstore.html",
    "title": "Publish an App Version on the AppStore",
    "summary": "Publish an App Version on the AppStore Publishing to the RWS AppStore makes your app discoverable to thousands of RWS users worldwide. This process includes validation, proper signing, and listing creation to ensure a professional presentation of your solution. What You Need to Provide Send an email to AppStore Support with the subject: Publish App on AppStore: <App Name> v<Version> Include the following required information in the email body: Item Description Example/Notes Download Link Share link to app package OneDrive, SharePoint, Google Drive, Dropbox (no email attachments) App Name Name for publication Must match plugin/add-on manifest App Version Version number Must match plugin/add-on manifest Supported Products Target RWS products \"Trados Studio\", \"Trados Cloud\", \"Language Weaver\", \"Tridion\", etc. App Logo App icon/logo 512 x 512 PNG recommended App Description User-focused description Include both short summary and longer description if available Support Contact Support information Email address or support portal URL Changelog Release notes Link to changelog or include highlights in email Pricing Pricing model Free or paid (include pricing model and purchase URL if paid) Publication Target Where to publish RWS AppStore (public): Yes/No Private AppStore: Yes/No Optional Assets If available, you can also include: Screenshots for the listing page Any specific installation or configuration instructions you want visible on the listing A link to your privacy policy (recommended if your solution processes user data) What Happens Next Validation: We verify the package, check basic metadata (name, version, supported product), and may sign the plugin if required. Follow-up: If anything is unclear or missing, we will contact you for clarification. Publication: Once confirmed, we will publish the new listing or update the existing one and share the AppStore URL and/or private endpoint link. Timelines Provided all required information is available, publication is typically completed within 48 hours. Updating an Existing Listing Email subject: Update App on AppStore: <App Name> v<Version> Include a new download link, updated version, and release notes Mention any metadata changes (logo, description, support contact, pricing, visibility) The version number must be higher than the currently published version Tips to Avoid Delays Ensure the app name and version match the manifest Provide an accessible download link (no passwords, or include credentials if needed) Include the 512 x 512 logo and support contact details For Trados Studio plugins, ensure the package installs cleanly in the supported Studio version(s)"
  },
  "articles/sign-plugin-private.html": {
    "href": "articles/sign-plugin-private.html",
    "title": "Sign a Plugin for Private Distribution",
    "summary": "Sign a Plugin for Private Distribution If you plan to distribute a Trados Studio plugin privately (outside the public AppStore), RWS can sign your plugin so it installs smoothly in supported versions of Trados Studio and is trusted by the application. After signing, you can distribute the plugin directly or via a Private AppStore endpoint. Request Plugin Signing Send an email to AppStore Support with the subject: Sign Plugin: <Plugin Name> v<Version> Include the following required information in the email body: Item Description Example/Notes Download Link Share link to unsigned plugin OneDrive, SharePoint, Google Drive, Dropbox (no email attachments) Plugin Name Name of plugin Must match plugin manifest Plugin Version Version number Must match plugin manifest Supported Products Target Trados products \"Trados Studio\" or \"Trados Cloud\" Plugin Description Brief purpose description Optional but recommended - helps validate metadata Distribution Notes Special requirements Optional - e.g., need Private AppStore endpoint Delivery Preferences Default delivery: We will provide you with a secure download link to the signed plugin once ready. Custom delivery: If you prefer us to upload the signed plugin to a specific location you manage, include: Destination details Any required credentials What Happens Next Validation: We verify the plugin structure and metadata and run basic checks. Signing: We sign the plugin and prepare it for distribution. Delivery: We share the signed plugin link or upload it to your preferred location. Timelines Provided all required information is available, signing is typically completed within 48 hours. Important Notes Note One signed build per version: Each new build or version requires a new signing request. Tip Installation: End users can install the signed plugin using the standard Trados Studio plugin installation process. Tip Private AppStore option: If you want to distribute through a Private AppStore endpoint (so users can discover and install directly from within Trados Studio), indicate this in your email. We can provision a unique endpoint and share the URL with you. Distribution Options After Signing Direct Distribution Share the signed plugin file directly with your users Users install via Trados Studio's standard plugin installation process Private AppStore Endpoint Request a private AppStore URL during the signing process Users can discover and install your plugin directly from within Trados Studio Maintains the familiar AppStore experience for your users"
  },
  "index.html": {
    "href": "index.html",
    "title": "RWS Developers",
    "summary": "RWS for Developers Getting Started & Support New to RWS development? Start here for essential resources including developer licensing, app publishing guidance, and community support to help you build and distribute solutions across the RWS ecosystem. Request Developer License Get started with RWS development by requesting the necessary licenses and API access for building solutions across the RWS product ecosystem. AppStore Publishing Guide Learn how to publish apps and integrations to the RWS AppStore, request code signing, and get early access to the new AppStore Manager platform. Developer Support Join the Developer Community to engage with fellow developers and get support. Language Technology Turn your ideas into solutions with RWS. By integrating with RWS products, you can unlock advanced capabilities to meet your unique business requirements through APIs, SDKs, Add-ons and plugins. Trados Cloud Integrate external applications with Trados Enterprise, Accelerate, Team, Ignite and Go. Leverage the public API to automate projects or create add-ons for advanced workflow and UI customization. Trados Studio Develop plugins for Trados Studio desktop, such as translation and terminology providers, or build standalone applications for project automation. Language Weaver Integrate real-time, secure neural machine translation directly into your applications. Content Management Tridion Docs Extend and automate standard functionality to meet the business needs of your ecosystem. Tridion Sites Improve functionality, manage integrations, and customize the user interface of Tridion Sites. XPP Streamline and automate the digital transformation and publishing of your content deliverables. Other SDKs and APIs Explore our other SDKs and APIs... MultiTerm Develop new ways to manage your terminology and share your existing termbases. Passolo Create your own add-ins to support your custom software localization process. Trados GroupShare Enhance the way you work in your on-premises translation management tool. WorldServer Improve functionality, manage integrations, and customize the user interface of your TMS. Managed Translation Integrate different types of translation resources in your localization process MultiTrans Automate third-party integrations and improve the management of your TMS projects. Trados Business Manager Create, edit and delete any data contained in your business management environment."
  }
}